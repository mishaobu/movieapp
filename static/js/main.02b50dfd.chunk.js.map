{"version":3,"sources":["config.js","components/MovieBlock.js","components/MoviePage.js","App.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","firebase","require","MovieBlock","props","handleDeleteClick","bind","handleListClick","state","data","isOpen","lists","toolbarButtons","onClick","type","value","className","prevProps","this","index","item","push","list","setState","apps","length","initializeApp","e","listAddedTo","target","getAttribute","database","ref","json","imdbID","set","alert","Title","child","remove","src","Poster","mainSrc","imageTitle","imageCaption","Director","imdbRating","onCloseRequest","Component","MoviePage","movies","activeList","showLists","search","activeFilter","filteredMovies","movieid","time","movieRef","moreLoadable","totalLoaded","handleListSelect","handleSearchChange","handleChange","handleSubmit","handleNewList","increaseLoad","goHome","on","snapshot","newState","val","console","log","preventDefault","then","name","handleValidation","axios","get","response","setTimeout","listName","listMovies","i","toLowerCase","includes","Object","keys","forEach","key","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","onChange","map","Item","Form","inline","FormControl","placeholder","onSubmit","Button","variant","slice","movieJSON","center","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02b50dfd.chunk.js","sourcesContent":["const config = {\r\n    apiKey: \"AIzaSyA3PSDrSVY--kPeLB-6creeKMUc0jR-A5I\",\r\n    authDomain: \"misha-site.firebaseapp.com\",\r\n    databaseURL: \"https://misha-site.firebaseio.com\",\r\n  }\r\nexport default config;","import React, { Component } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport config from \"../config\";\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\nexport default class MovieBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.handleListClick = this.handleListClick.bind(this);\r\n        this.state = { \r\n          data: [],\r\n          isOpen: false,\r\n          lists: [],\r\n          toolbarButtons: [<button onClick = {this.handleDeleteClick} type = \"button\" value = \"delete\" className = \"deleteMovieButton\"> Delete Movie </button>],\r\n        };\r\n      }\r\n\r\n      componentDidUpdate(prevProps) {\r\n        if (prevProps.lists !== this.props.lists) {\r\n          let toolbarButtons = [<button onClick = {this.handleDeleteClick} type = \"button\" value = \"delete\" className = \"deleteMovieButton\"> Delete Movie </button>]\r\n          for (let index in this.props.lists) {\r\n            let item = this.props.lists[index];\r\n              toolbarButtons.push([<button onClick = {this.handleListClick} type = \"button\" value = \"list\" list = {item} className = \"deleteMovieButton\"> Add to {item} </button>]);\r\n          }\r\n          this.setState({\r\n            toolbarButtons: toolbarButtons\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n      componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        }\r\n        let toolbarButtons = [<button onClick = {this.handleDeleteClick} type = \"button\" value = \"delete\" className = \"deleteMovieButton\"> Delete Movie </button>]\r\n        for (let index in this.props.lists) {\r\n          let item = this.props.lists[index];\r\n            toolbarButtons.push([<button onClick = {this.handleListClick} type = \"button\" value = \"list\" list = {item} className = \"deleteMovieButton\"> Add to {item} </button>]);\r\n        }\r\n        this.setState({\r\n          toolbarButtons: toolbarButtons\r\n        });\r\n      }\r\n\r\n      handleListClick(e) {\r\n        let listAddedTo = e.target.getAttribute('list');\r\n        firebase.database().ref(\"lists/\" + listAddedTo + \"/\" + this.props.json.imdbID).set(this.props.json.imdbID);\r\n        alert(this.props.json.Title + \" has been added to \" + listAddedTo);\r\n      }\r\n\r\n      handleDeleteClick() {\r\n        let ref = firebase.database().ref(\"movieid\");\r\n        ref.child(this.props.json.imdbID).remove();\r\n        alert(this.props.json.Title + \" has been deleted.\");\r\n      }\r\n\r\n\r\n    render() {\r\n       const isOpen = this.state.isOpen;\r\n        return (\r\n            <div>\r\n              <img className = \"movieBlock\" src = {this.props.json.Poster} onClick = {() => this.setState({isOpen: true})}></img>\r\n            {isOpen && (\r\n              <Lightbox mainSrc = {this.props.json.Poster} \r\n               imageTitle = {this.props.json.Title} \r\n               imageCaption = {\"Directed by: \" + this.props.json.Director + '   ' + \"|  IMDB Rating: \" + this.props.json.imdbRating} \r\n               onCloseRequest={() => this.setState({ isOpen: false })}\r\n               toolbarButtons = {this.state.toolbarButtons}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport MovieBlock from \"./MovieBlock\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport axios from \"axios\";\r\nimport config from \"../config\";\r\nimport firebase from \"firebase\";\r\n\r\n// API Key:\r\n//http://www.omdbapi.com/?apikey=3f1dca30&i=tt3896198\r\n\r\nexport default class MoviePage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movies: [],\r\n      lists: [],\r\n      activeList: \"All Movies\",\r\n      showLists: false,\r\n      //listMovies: [],\r\n\r\n      search: \"\",\r\n      activeFilter: false,\r\n      filteredMovies: [],\r\n\r\n      movieid: \"\",\r\n      time: null,\r\n      movieRef: null,\r\n      list: \"\",\r\n      \r\n      moreLoadable: false,\r\n      totalLoaded: 8,\r\n    };\r\n    this.handleListSelect = this.handleListSelect.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleNewList = this.handleNewList.bind(this);\r\n    this.increaseLoad = this.increaseLoad.bind(this);\r\n    this.goHome = this.goHome.bind(this);\r\n  }\r\n\r\n\r\n  goHome() {\r\n    let ref = firebase.database().ref(\"movieid\");\r\n    ref.on(\"value\", (snapshot) => {\r\n      let newState = [];\r\n      const data = snapshot.val();\r\n      for (let item in data) {\r\n        console.log(item);\r\n        newState.push(data[item]);\r\n      }\r\n      this.setState({\r\n        movies: newState,\r\n        showLists: false,\r\n        movieid: \"\",\r\n        list: \"\",\r\n        search: \"\",\r\n        activeFilter: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  increaseLoad() {\r\n    let moreLoadable;\r\n    if (this.state.totalLoaded + 8 < this.state.movies.length) {\r\n      moreLoadable = true;\r\n    } else {\r\n      moreLoadable = false;\r\n    }\r\n    this.setState({\r\n      moreLoadable: moreLoadable,\r\n      totalLoaded: this.state.totalLoaded + 8,\r\n    })\r\n  }\r\n\r\n  handleValidation() {\r\n    if (this.state.movieid === \"\") {\r\n      alert(\"ID cannot be empty.\");\r\n    } else if (this.state.movieid.length != 9) {\r\n      alert(\"ID should be 9 characters.\");\r\n    } else return true;\r\n    return false;\r\n  }\r\n\r\n  handleNewList(e) {\r\n    e.preventDefault();\r\n    firebase\r\n      .database()\r\n      .ref(\"lists/\" + this.state.list)\r\n      .set(\"\")\r\n      .then(() => this.setState({ list: \"\" }));\r\n    alert(\"New list submitted.\");\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      axios\r\n        .get(\"https://www.omdbapi.com/?apikey=fe15e914&i=\" + this.state.movieid)\r\n        .then((response) => {\r\n          const movieRef = firebase\r\n            .database()\r\n            .ref(\"movieid/\" + this.state.movieid);\r\n          response.data[\"Lists\"] = [\"\"];\r\n          console.log(response.data);\r\n          setTimeout(() => movieRef.set(response.data));\r\n        })\r\n        .then(() => {\r\n          let moreLoadable;\r\n          if (this.state.movies.length > this.state.totalLoaded) {\r\n            moreLoadable = true;\r\n          } else {\r\n            moreLoadable = false;\r\n          }\r\n          this.setState({\r\n            movieid: \"\",\r\n            time: null,\r\n            moreLoadable: moreLoadable,\r\n          });\r\n        });\r\n      alert(\"New movie submitted.\");\r\n    }\r\n  }\r\n\r\n  handleListSelect(e) {\r\n    console.log(\"In handleListSelect\", e.target)\r\n    let listName = e.target.getAttribute(\"value\")\r\n    this.setState({\r\n      activeList: listName,\r\n    });\r\n    let ref;\r\n    if (listName !== \"All Movies\") {\r\n      let ref = firebase.database().ref(\"lists/\" + listName);\r\n      let listMovies;\r\n      ref.on(\"value\", (snapshot) => {\r\n        let newState = [];\r\n        listMovies = newState;\r\n        const data = snapshot.val();\r\n        for (let item in data) {\r\n          newState.push(data[item]);\r\n        }\r\n      });\r\n      //console.log(\"NewState: \", listMovies);\r\n      ref = firebase.database().ref(\"movieid\");\r\n      ref.on(\"value\", (snapshot) => {\r\n        let newState = [];\r\n        const data = snapshot.val();\r\n        for (let item in listMovies) {\r\n          newState.push(data[listMovies[item]]);\r\n        }\r\n        this.setState({\r\n          movies: newState,\r\n        });\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showLists: false,\r\n      })\r\n      ref = firebase.database().ref(\"movieid\");\r\n      ref.on(\"value\", (snapshot) => {\r\n        let newState = [];\r\n        const data = snapshot.val();\r\n        for (let item in data) {\r\n          //console.log(item);\r\n          newState.push(data[item]);\r\n        }\r\n        this.setState({\r\n          movies: newState,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearchChange(e) {\r\n    this.setState({\r\n      search: e.target.value,\r\n    });\r\n    if (e.target.value !== \"\") {\r\n      this.state.activeFilter = true;\r\n    } else {\r\n      this.state.activeFilter = false;\r\n    }\r\n    let filteredMovies = [];\r\n    for (let i in this.state.movies) {\r\n      if (this.state.movies[i].Title.toLowerCase().includes(e.target.value)) {\r\n        filteredMovies.push(this.state.movies[i]);\r\n      }\r\n    }\r\n    this.setState({\r\n      filteredMovies: filteredMovies,\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n\r\n    //if (!(this.state.showLists)) {\r\n    let ref = firebase.database().ref(\"movieid\");\r\n    ref.on(\"value\", (snapshot) => {\r\n      let newState = [];\r\n      const data = snapshot.val();\r\n      for (let item in data) {\r\n        newState.push(data[item]);\r\n        console.log(item);\r\n      }\r\n\r\n      let moreLoadable;\r\n      if (this.state.totalLoaded < newState.length) {\r\n        moreLoadable = true;\r\n      } else {\r\n        moreLoadable = false;\r\n      }\r\n      this.setState({\r\n        movies: newState,\r\n        moreLoadable: moreLoadable,\r\n      });\r\n    });\r\n  // } else {\r\n  //   let ref = firebase.database().ref(\"movieid\");\r\n  //   ref.on(\"value\", (snapshot) => {\r\n  //     let newState = [];\r\n  //     const data = snapshot.val();\r\n  //     for (let item in this.state.listMovies) {\r\n  //       console.log(item);\r\n  //       newState.push(data[item]);\r\n  //     }\r\n  //     this.setState({\r\n  //       movies: newState,\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n    let ref2 = firebase.database().ref(\"lists\");\r\n    ref2.on(\"value\", (snapshot) => {\r\n      let newState = [\"All Movies\"];\r\n      const data = snapshot.val();\r\n      Object.keys(data).forEach(function (key) {\r\n        newState.push(key);\r\n      });\r\n      this.setState({\r\n        lists: newState\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const lists = this.state.lists;\r\n    return (\r\n      <div className=\"moviePage\">\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand href = \"#\" onClick = {this.goHome}> Movie Manager</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <NavDropdown title=\"List\" id=\"basic-nav-dropdown\" onChange = {this.handleListSelect}>\r\n                {this.state.lists.map((list, index) => (\r\n                  <NavDropdown.Item onClick = {this.handleListSelect} value={list}> {list} </NavDropdown.Item>\r\n                ))}\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Form inline className=\"listAddForm\">\r\n              <FormControl\r\n                className=\"mr-1\"\r\n                type=\"text\"\r\n                name=\"list\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"List Name\"\r\n                value={this.state.list}\r\n                onSubmit={this.handleNewList}\r\n              />\r\n              <Button className=\"mr-1\" variant=\"outline-success\" onClick = {this.handleNewList}>\r\n                Add New List\r\n              </Button>\r\n            </Form>\r\n            <Form inline className=\"movieAddForm\">\r\n              <FormControl\r\n                className=\"mr-1\"\r\n                type=\"text\"\r\n                name=\"movieid\"\r\n                onChange={this.handleChange}\r\n                placeholder=\"IMDB ID\"\r\n                value={this.state.movieid}\r\n                onSubmit={this.handleSubmit}\r\n              />\r\n              <Button inline className=\"mr-5\" variant=\"outline-success\" onClick = {this.handleSubmit}>\r\n                Add Movie\r\n              </Button>\r\n            </Form>\r\n            <Form className=\"movieSearchForm\">\r\n              <FormControl\r\n                type=\"text\"\r\n                name=\"search\"\r\n                onChange={this.handleSearchChange}\r\n                placeholder=\"Search\"\r\n                value={this.state.search}\r\n              />\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <div className = \"movieBlockDiv\">\r\n          {this.state.activeFilter\r\n            ? this.state.filteredMovies.slice(0,this.state.totalLoaded).map((movieJSON, index) => (\r\n                <MovieBlock key={index} json={movieJSON} lists={this.state.lists} />\r\n              ))\r\n            : this.state.movies.slice(0,this.state.totalLoaded).map((movieJSON, index) => (\r\n                <MovieBlock key={index} json={movieJSON} lists={lists.slice(1,)}\r\n                />\r\n              ))\r\n          }\r\n        </div>\r\n\r\n        {this.state.moreLoadable ?\r\n          <Button center className = \"mt-4\" variant = \"outline-success\" onClick = {this.increaseLoad}> Load More </Button> : <></>\r\n        }\r\n        <br/><br/>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport MoviePage from \"./components/MoviePage\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MoviePage/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}